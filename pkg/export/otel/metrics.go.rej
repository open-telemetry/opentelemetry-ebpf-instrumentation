diff a/pkg/export/otel/metrics.go b/pkg/export/otel/metrics.go	(rejected hunks)
@@ -25,6 +25,7 @@ import (
 	"github.com/grafana/beyla/v2/pkg/export/instrumentations"
 	"github.com/grafana/beyla/v2/pkg/export/otel/metric"
 	instrument "github.com/grafana/beyla/v2/pkg/export/otel/metric/api/metric"
+	"github.com/grafana/beyla/v2/pkg/internal/exec"
 	"github.com/grafana/beyla/v2/pkg/internal/imetrics"
 	"github.com/grafana/beyla/v2/pkg/internal/pipe/global"
 	"github.com/grafana/beyla/v2/pkg/internal/request"
@@ -459,6 +467,16 @@ func (mr *MetricsReporter) graphMetricOptions(mlog *slog.Logger) []metric.Option
 	}
 }
 
+func (mr *MetricsReporter) setupTargetInfo(m *Metrics, meter instrument.Meter) error {
+	var err error
+	m.targetInfo, err = meter.Int64UpDownCounter(TargetInfo)
+	if err != nil {
+		return fmt.Errorf("creating span metric traces target info: %w", err)
+	}
+
+	return nil
+}
+
 // nolint: cyclop
 func (mr *MetricsReporter) setupOtelMeters(m *Metrics, meter instrument.Meter) error {
 	if !mr.cfg.OTelMetricsEnabled() {
@@ -859,7 +882,10 @@ func otelHistogramConfig(metricName string, buckets []float64, useExponentialHis
 
 }
 
-func (mr *MetricsReporter) metricResourceAttributes(service *svc.Attrs) attribute.Set {
+func (mr *MetricsReporter) tracesResourceAttributes(service *svc.Attrs) attribute.Set {
+	if service == nil {
+		return *attribute.EmptySet()
+	}
 	baseAttrs := []attribute.KeyValue{
 		request.ServiceMetric(service.UID.Name),
 		semconv.ServiceInstanceID(service.UID.Instance),
