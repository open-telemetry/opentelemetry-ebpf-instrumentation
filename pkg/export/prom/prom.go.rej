diff a/pkg/export/prom/prom.go b/pkg/export/prom/prom.go	(rejected hunks)
@@ -3,12 +3,13 @@ package prom
 import (
 	"context"
 	"fmt"
+	"log/slog"
 	"runtime"
 	"slices"
+	"strconv"
 	"strings"
 	"time"
 
-	"github.com/hashicorp/golang-lru/v2/expirable"
 	"github.com/prometheus/client_golang/prometheus"
 
 	"github.com/grafana/beyla/v2/pkg/buildinfo"
@@ -18,6 +19,7 @@ import (
 	"github.com/grafana/beyla/v2/pkg/export/instrumentations"
 	"github.com/grafana/beyla/v2/pkg/export/otel"
 	"github.com/grafana/beyla/v2/pkg/internal/connector"
+	"github.com/grafana/beyla/v2/pkg/internal/exec"
 	"github.com/grafana/beyla/v2/pkg/internal/pipe/global"
 	"github.com/grafana/beyla/v2/pkg/internal/request"
 	"github.com/grafana/beyla/v2/pkg/internal/svc"
@@ -129,6 +133,10 @@ type PrometheusConfig struct {
 	ExtraResourceLabels []string `yaml:"extra_resource_attributes" env:"BEYLA_PROMETHEUS_EXTRA_RESOURCE_ATTRIBUTES" envSeparator:","`
 }
 
+func mlog() *slog.Logger {
+	return slog.With("component", "prom.MetricsReporter")
+}
+
 func (p *PrometheusConfig) SpanMetricsEnabled() bool {
 	return slices.Contains(p.Features, otel.FeatureSpan)
 }
@@ -258,7 +268,11 @@ func PrometheusEndpoint(
 
 // nolint:cyclop
 func newReporter(
-	ctxInfo *global.ContextInfo, cfg *PrometheusConfig, selector attributes.Selection, input *msg.Queue[[]request.Span],
+	ctxInfo *global.ContextInfo,
+	cfg *PrometheusConfig,
+	selector attributes.Selection,
+	input *msg.Queue[[]request.Span],
+	processEventCh *msg.Queue[exec.ProcessEvent],
 ) (*metricsReporter, error) {
 	groups := ctxInfo.MetricAttributeGroups
 	groups.Add(attributes.GroupPrometheus)
